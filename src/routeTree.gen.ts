/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as EmployeesRouteImport } from './routes/employees'
import { Route as MealsRouteRouteImport } from './routes/meals/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MealsIndexRouteImport } from './routes/meals/index'
import { Route as MealsMealIdIndexRouteImport } from './routes/meals/$mealId/index'

const EmployeesRoute = EmployeesRouteImport.update({
  id: '/employees',
  path: '/employees',
  getParentRoute: () => rootRouteImport,
} as any)
const MealsRouteRoute = MealsRouteRouteImport.update({
  id: '/meals',
  path: '/meals',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MealsIndexRoute = MealsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MealsRouteRoute,
} as any)
const MealsMealIdIndexRoute = MealsMealIdIndexRouteImport.update({
  id: '/$mealId/',
  path: '/$mealId/',
  getParentRoute: () => MealsRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/meals': typeof MealsRouteRouteWithChildren
  '/employees': typeof EmployeesRoute
  '/meals/': typeof MealsIndexRoute
  '/meals/$mealId': typeof MealsMealIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/employees': typeof EmployeesRoute
  '/meals': typeof MealsIndexRoute
  '/meals/$mealId': typeof MealsMealIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/meals': typeof MealsRouteRouteWithChildren
  '/employees': typeof EmployeesRoute
  '/meals/': typeof MealsIndexRoute
  '/meals/$mealId/': typeof MealsMealIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/meals' | '/employees' | '/meals/' | '/meals/$mealId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/employees' | '/meals' | '/meals/$mealId'
  id: '__root__' | '/' | '/meals' | '/employees' | '/meals/' | '/meals/$mealId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MealsRouteRoute: typeof MealsRouteRouteWithChildren
  EmployeesRoute: typeof EmployeesRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/employees': {
      id: '/employees'
      path: '/employees'
      fullPath: '/employees'
      preLoaderRoute: typeof EmployeesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/meals': {
      id: '/meals'
      path: '/meals'
      fullPath: '/meals'
      preLoaderRoute: typeof MealsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/meals/': {
      id: '/meals/'
      path: '/'
      fullPath: '/meals/'
      preLoaderRoute: typeof MealsIndexRouteImport
      parentRoute: typeof MealsRouteRoute
    }
    '/meals/$mealId/': {
      id: '/meals/$mealId/'
      path: '/$mealId'
      fullPath: '/meals/$mealId'
      preLoaderRoute: typeof MealsMealIdIndexRouteImport
      parentRoute: typeof MealsRouteRoute
    }
  }
}

interface MealsRouteRouteChildren {
  MealsIndexRoute: typeof MealsIndexRoute
  MealsMealIdIndexRoute: typeof MealsMealIdIndexRoute
}

const MealsRouteRouteChildren: MealsRouteRouteChildren = {
  MealsIndexRoute: MealsIndexRoute,
  MealsMealIdIndexRoute: MealsMealIdIndexRoute,
}

const MealsRouteRouteWithChildren = MealsRouteRoute._addFileChildren(
  MealsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MealsRouteRoute: MealsRouteRouteWithChildren,
  EmployeesRoute: EmployeesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
